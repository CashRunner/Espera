<Controls:MetroWindow x:Class="Espera.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:View="clr-namespace:Espera.View"
        Title="Espera" Height="600" Width="800" WindowState="Maximized" Closing="MetroWindowClosing">
    <Window.DataContext>
        <View:MainViewModel x:Name="mainViewModel" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Icons/MergedResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="NoButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Padding="0" Click="AddSongsButtonClick">
                    <Image Source="/Espera.View;component/Images/appbar.add.png" />
                </Button>
                <Button Padding="0" Margin="15, 0, 0, 0" Width="30">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                    <Setter Property="Command" Value="{Binding Path=PauseCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                    <Setter Property="Command" Value="{Binding Path=PlayCommand}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SelectedPlaylistIndex}" Value="-1">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                        <Setter Property="Source" Value="/Espera.View;component/Images/appbar.pause.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                        <Setter Property="Source" Value="/Espera.View;component/Images/appbar.play.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Padding="0" Margin="5, 0, 0, 0">
                    <Image Source="/Espera.View;component/Images/appbar.navigate.previous.png" />
                </Button>
                <Button Padding="0" Margin="5, 0, 0, 0">
                    <Image Source="/Espera.View;component/Images/appbar.navigate.next.png" />
                </Button>
            </StackPanel>
            <StackPanel Margin="10, 0, 0, 0" Grid.Column="1" Orientation="Horizontal">
                <Button Style="{StaticResource NoButtonStyle}" Command="{Binding Path=MuteCommand}">
                    <Image Height="25" Source="/Espera.View;component/Images/appbar.sound.1.png" />
                </Button>
                <Slider Width="200" IsMoveToPointEnabled="True" Maximum="1" Value="{Binding Path=Volume}" />
                <Button Style="{StaticResource NoButtonStyle}" Command="{Binding Path=UnMuteCommand}">
                    <Image Height="25" Source="/Espera.View;component/Images/appbar.sound.3.png" />
                </Button>
            </StackPanel>
            <Slider Grid.Column="2" Margin="5, 0, 0, 0" IsMoveToPointEnabled="True" Value="{Binding Path=CurrentSeconds}" Maximum="{Binding Path=TotalSeconds}" />
            <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="5, 0, 0, 0">
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=CurrentTime, StringFormat=mm\\:ss}" />
                <TextBlock VerticalAlignment="Center" Text="/" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=TotalTime, StringFormat=mm\\:ss}" />
            </StackPanel>
            <TextBox Grid.Column="4" Margin="5, 0, 0, 0" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" Height="25" Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Grid Grid.Row="1" Margin="0, 5, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <ListBox ItemsSource="{Binding Path=Artists}" SelectedItem="{Binding Path=SelectedArtist, IsAsync=True}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="MinHeight" Value="25" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="5, 0, 0, 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="#FF143c65" />
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource AccentColorBrush}"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bd" Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.35*" />
                    <RowDefinition Height="0.65*" />
                </Grid.RowDefinitions>
                <ListView Grid.Row="0" ItemsSource="{Binding Path=SelectableSongs, IsAsync=True}" SelectedItem="{Binding Path=SelectedSong}">
                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                            <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Path=Title}" />
                            <GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Path=Duration, StringFormat=mm\\:ss}" />
                            <GridViewColumn Header="Artist" DisplayMemberBinding="{Binding Path=Artist}" />
                            <GridViewColumn Header="Album" DisplayMemberBinding="{Binding Path=Album}" />
                            <GridViewColumn Header="Genre" DisplayMemberBinding="{Binding Path=Genre}" />
                        </GridView>
                    </ListView.View>
                </ListView>
                <ListView Grid.Row="1" ItemsSource="{Binding Path=Playlist, IsAsync=True}" SelectedIndex="{Binding Path=SelectedPlaylistIndex}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Path=Title}" />
                            <GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Path=Duration, StringFormat=mm\\:ss}" />
                            <GridViewColumn Header="Artist" DisplayMemberBinding="{Binding Path=Artist}" />
                            <GridViewColumn Header="Album" DisplayMemberBinding="{Binding Path=Album}" />
                            <GridViewColumn Header="Genre" DisplayMemberBinding="{Binding Path=Genre}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="2" Margin="0, 5, 0, 0" Height="25" Visibility="{Binding Path=IsAdding, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBarItem Content="Adding songs: " />
            <StatusBarItem Content="{Binding Path=CurrentAddingPath}" />
        </StatusBar>
    </Grid>
</Controls:MetroWindow>